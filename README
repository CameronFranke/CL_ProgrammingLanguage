This repository contains the all of the tools and information associated with 
Cameron's Programming Language.

The grammar.ebnf contains the grammar for the language in a modified ebnf format. 
The format is a combination of python regex and the specific syntax required by the 
Grako package. 

The tests folder contain a variety of testcases:
	st = scanner test
	pt = parser test 

clparser.py is the parser projuced by grako. It can be recompiled with the following: 

	"python -m grako --outfile clparser.py grammar.ebnf"

The test driver loads the specified tests, preprocesses them in accordance with 
standard CL practices and feed the text to the parser.



------------------  x86  ----------------
compiling with nasm:
	nasm -f elf64 -o <outfile> <infile>

	-f: format = elf64 (64 bit)
	-o: output = name of output file

<outfile>.o will be produced, this is an object file and cannot be executed
To convert it to an executable we will link with with the GNU linker: 

	ld <infile> -o <program name>

	infile = .o from nasm
	program name = name of the executable 

Run executable with "./<program name>" 


##############################################
	Current Functionality
Data types: 
	Char 
	Int 
	Array (single dimension)

Control:
	if statements ( only works with expression as condition )
	while loop ( only works with expessions as condition )
